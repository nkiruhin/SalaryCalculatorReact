// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculatorReact.Model;

namespace SalaryCalculatorReact.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190529061858_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("SalaryCalculatorReact.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeId");

                    b.Property<string>("AccountId");

                    b.Property<DateTime>("BirthDay");

                    b.Property<DateTime>("DateofRecruitment");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName");

                    b.Property<int?>("ManagerId");

                    b.Property<int>("PositionId");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SalaryCalculatorReact.Model.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PositionId");

                    b.Property<bool>("IsAllChildrenSalary");

                    b.Property<bool>("IsChildrenSalary");

                    b.Property<float?>("Koeff");

                    b.Property<int?>("LongevityKoeff");

                    b.Property<int?>("MaxLongevityKoeff");

                    b.Property<string>("PositionName");

                    b.Property<float>("SalaryRate");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("SalaryCalculatorReact.Model.SalaryReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SalaryReportId");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime>("DateUpdate");

                    b.Property<int>("EmployeeId");

                    b.Property<float?>("SumOfSalary");

                    b.Property<int>("month");

                    b.Property<float?>("salaryOfEmploees");

                    b.Property<int>("year");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SalaryReport");
                });

            modelBuilder.Entity("SalaryCalculatorReact.Model.Employee", b =>
                {
                    b.HasOne("SalaryCalculatorReact.Model.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("SalaryCalculatorReact.Model.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalaryCalculatorReact.Model.SalaryReport", b =>
                {
                    b.HasOne("SalaryCalculatorReact.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
